package com.airiea.dao.orm;

import com.airiea.model.enums.ErrorCode;
import com.airiea.model.enums.Status;
import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Date;

@Data
@Builder
@NoArgsConstructor
@AllArgsConstructor
@DynamoDBTable(tableName = "task-records")
public class TaskRecord {
    @JsonProperty("task_id")
    @DynamoDBHashKey(attributeName = "task_id")
    String taskId;

    @JsonProperty("entity_id")
    @DynamoDBAttribute(attributeName = "entity_id")
    String entityId;

    @JsonProperty("agent_name")
    @DynamoDBAttribute(attributeName = "agent_name")
    String agentName;

    @JsonProperty("task_count")
    @DynamoDBAttribute(attributeName = "task_count")
    Integer taskCount;

    @JsonProperty("task_input")
    @DynamoDBAttribute(attributeName = "task_input")
    String taskInput;

    @JsonProperty("task_output")
    @DynamoDBAttribute(attributeName = "task_output")
    String taskOutput;

    @DynamoDBTypeConvertedEnum
    @DynamoDBAttribute(attributeName = "status")
    Status status;

    @JsonProperty("error_code")
    @DynamoDBTypeConvertedEnum
    @DynamoDBAttribute(attributeName = "error_code")
    ErrorCode errorCode;

    @JsonProperty("error_message")
    @DynamoDBAttribute(attributeName = "error_message")
    String errorMessage;

    @JsonProperty("created_date")
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
    @DynamoDBAttribute(attributeName = "created_date")
    Date createdDate;

    @JsonProperty("updated_date")
    @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
    @DynamoDBAttribute(attributeName = "updated_date")
    Date updatedDate;
}
